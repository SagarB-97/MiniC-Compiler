Terminals unused in grammar

   SWITCH
   CASE
   DEFAULT
   STRUCT
   '^'


State 236 conflicts: 1 shift/reduce
State 237 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: FunctionDef
    2      | Declaration
    3      | Include
    4      | FunctionDef start
    5      | Declaration start
    6      | Include start

    7 IncludeStatement: '#' INCLUDE LT ID GT
    8                 | '#' INCLUDE LT ID '.' ID GT

    9 Include: IncludeStatement

   10 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement

   11 FormalParamList: Type ID
   12                | Type '*' ID
   13                | Type ArrayNotation
   14                | Type ID ',' FormalParamList
   15                | Type '*' ID ',' FormalParamList
   16                | Type ArrayNotation ',' FormalParamList
   17                | %empty

   18 Declaration: Type IDList ';'

   19 Type: INT
   20     | FLOAT
   21     | VOID
   22     | CHAR
   23     | DOUBLE
   24     | Modifiers INT
   25     | Modifiers FLOAT
   26     | Modifiers DOUBLE
   27     | Modifiers CHAR

   28 Modifiers: SHORT
   29          | LONG
   30          | UNSIGNED
   31          | SIGNED

   32 ArrayNotation: ID '[' ']'
   33              | ID '[' Expr ']'

   34 IDList: ArrayNotation
   35       | ID ',' IDList
   36       | '*' ID ',' IDList
   37       | ArrayNotation ',' IDList
   38       | ID
   39       | '*' ID
   40       | DefineAssign ',' IDList
   41       | DefineAssign

   42 DefineAssign: ID '=' Expr
   43             | ID PAS Expr
   44             | ID SAS Expr
   45             | ID MAS Expr
   46             | ID DAS Expr
   47             | '*' ID '=' Expr
   48             | '*' ID PAS Expr
   49             | '*' ID SAS Expr
   50             | '*' ID MAS Expr
   51             | '*' ID DAS Expr
   52             | ArrayNotation '=' Expr
   53             | ArrayNotation PAS Expr
   54             | ArrayNotation SAS Expr
   55             | ArrayNotation MAS Expr
   56             | ArrayNotation DAS Expr

   57 ParamList: Expr
   58          | Expr ',' ParamList
   59          | %empty

   60 Assignment: ID '=' Expr
   61           | ID PAS Expr
   62           | ID SAS Expr
   63           | ID MAS Expr
   64           | ID DAS Expr
   65           | '*' ID '=' Expr
   66           | '*' ID PAS Expr
   67           | '*' ID SAS Expr
   68           | '*' ID MAS Expr
   69           | '*' ID DAS Expr
   70           | ArrayNotation '=' Expr
   71           | ArrayNotation PAS Expr
   72           | ArrayNotation SAS Expr
   73           | ArrayNotation MAS Expr
   74           | ArrayNotation DAS Expr
   75           | Primary

   76 Expr: Logical_Expr

   77 Logical_Expr: Relational_Expr
   78             | Logical_Expr AND Relational_Expr
   79             | Logical_Expr OR Relational_Expr
   80             | NOT Relational_Expr

   81 Relational_Expr: Additive_Expr
   82                | Relational_Expr GT Additive_Expr
   83                | Relational_Expr LT Additive_Expr
   84                | Relational_Expr GE Additive_Expr
   85                | Relational_Expr LE Additive_Expr
   86                | Relational_Expr EQ Additive_Expr
   87                | Relational_Expr NE Additive_Expr

   88 Additive_Expr: Multiplicative_Expr
   89              | Additive_Expr '+' Multiplicative_Expr
   90              | Additive_Expr '-' Multiplicative_Expr

   91 Multiplicative_Expr: Primary
   92                    | Multiplicative_Expr '*' Primary
   93                    | Multiplicative_Expr '/' Primary
   94                    | Multiplicative_Expr '%' Primary

   95 Primary: OPEN_PAR Expr CLOSE_PAR
   96        | NUM
   97        | FLOATNUM
   98        | CHARCONST
   99        | STRING
  100        | ID
  101        | '*' ID
  102        | '&' ID
  103        | '-' Primary
  104        | ArrayNotation
  105        | FunctionCall
  106        | PP ID
  107        | ID PP
  108        | MM ID
  109        | ID MM

  110 CompoundStatement: '{' StatementList '}'

  111 StatementList: Statement StatementList
  112              | %empty

  113 Statement: WhileStatement
  114          | Declaration
  115          | ForStatement
  116          | IfStatement
  117          | Assignment ';'
  118          | ReturnStatement
  119          | DoWhileStatement
  120          | BREAK ';'
  121          | CONTINUE ';'
  122          | ';'

  123 ReturnStatement: RETURN Expr ';'

  124 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR Statement
  125               | WHILE OPEN_PAR Expr CLOSE_PAR CompoundStatement

  126 DoWhileStatement: DO CompoundStatement WHILE OPEN_PAR Expr CLOSE_PAR ';'

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

  129 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement ElseStatement
  130            | IF OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement

  131 ElseStatement: ELSE CompoundStatement
  132              | ELSE Statement
  133              | %empty

  134 FunctionCall: ID OPEN_PAR ParamList CLOSE_PAR


Terminals, with rules where they appear

$end (0) 0
'#' (35) 7 8
'%' (37) 94
'&' (38) 102
'*' (42) 12 15 36 39 47 48 49 50 51 65 66 67 68 69 92 101
'+' (43) 89
',' (44) 14 15 16 35 36 37 40 58
'-' (45) 90 103
'.' (46) 8
'/' (47) 93
';' (59) 18 117 120 121 122 123 126 127 128
'=' (61) 42 47 52 60 65 70
'[' (91) 32 33
']' (93) 32 33
'^' (94)
'{' (123) 110
'}' (125) 110
error (256)
INT (258) 19 24
FLOAT (259) 20 25
CHAR (260) 22 27
DOUBLE (261) 23 26
VOID (262) 21
RETURN (263) 123
SIGNED (264) 31
UNSIGNED (265) 30
LONG (266) 29
SHORT (267) 28
SWITCH (268)
BREAK (269) 120
CONTINUE (270) 121
CASE (271)
DEFAULT (272)
FOR (273) 127 128
WHILE (274) 124 125 126
DO (275) 126
IF (276) 129 130
ELSE (277) 131 132
STRUCT (278)
NUM (279) 96
ID (280) 7 8 10 11 12 14 15 32 33 35 36 38 39 42 43 44 45 46 47 48
    49 50 51 60 61 62 63 64 65 66 67 68 69 100 101 102 106 107 108
    109 134
FLOATNUM (281) 97
STRING (282) 99
CHARCONST (283) 98
INCLUDE (284) 7 8
OPEN_PAR (285) 10 95 124 125 126 127 128 129 130 134
CLOSE_PAR (286) 10 95 124 125 126 127 128 129 130 134
PAS (287) 43 48 53 61 66 71
MAS (288) 45 50 55 63 68 73
DAS (289) 46 51 56 64 69 74
SAS (290) 44 49 54 62 67 72
AND (291) 78
OR (292) 79
NOT (293) 80
PP (294) 106 107
MM (295) 108 109
LE (296) 85
GE (297) 84
EQ (298) 86
NE (299) 87
LT (300) 7 8 83
GT (301) 7 8 82


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
start (64)
    on left: 1 2 3 4 5 6, on right: 0 4 5 6
IncludeStatement (65)
    on left: 7 8, on right: 9
Include (66)
    on left: 9, on right: 3 6
FunctionDef (67)
    on left: 10, on right: 1 4
FormalParamList (68)
    on left: 11 12 13 14 15 16 17, on right: 10 14 15 16
Declaration (69)
    on left: 18, on right: 2 5 114
Type (70)
    on left: 19 20 21 22 23 24 25 26 27, on right: 10 11 12 13 14 15
    16 18
Modifiers (71)
    on left: 28 29 30 31, on right: 24 25 26 27
ArrayNotation (72)
    on left: 32 33, on right: 13 16 34 37 52 53 54 55 56 70 71 72 73
    74 104
IDList (73)
    on left: 34 35 36 37 38 39 40 41, on right: 18 35 36 37 40
DefineAssign (74)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    40 41
ParamList (75)
    on left: 57 58 59, on right: 58 134
Assignment (76)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75, on right:
    117 127 128
Expr (77)
    on left: 76, on right: 33 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 95 123
    124 125 126 127 128 129 130
Logical_Expr (78)
    on left: 77 78 79 80, on right: 76 78 79
Relational_Expr (79)
    on left: 81 82 83 84 85 86 87, on right: 77 78 79 80 82 83 84 85
    86 87
Additive_Expr (80)
    on left: 88 89 90, on right: 81 82 83 84 85 86 87 89 90
Multiplicative_Expr (81)
    on left: 91 92 93 94, on right: 88 89 90 92 93 94
Primary (82)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109,
    on right: 75 91 92 93 94 103
CompoundStatement (83)
    on left: 110, on right: 10 125 126 128 130 131
StatementList (84)
    on left: 111 112, on right: 110 111
Statement (85)
    on left: 113 114 115 116 117 118 119 120 121 122, on right: 111
    124 127 129 132
ReturnStatement (86)
    on left: 123, on right: 118
WhileStatement (87)
    on left: 124 125, on right: 113
DoWhileStatement (88)
    on left: 126, on right: 119
ForStatement (89)
    on left: 127 128, on right: 115
IfStatement (90)
    on left: 129 130, on right: 116
ElseStatement (91)
    on left: 131 132 133, on right: 129 130
FunctionCall (92)
    on left: 134, on right: 105


State 0

    0 $accept: . start $end

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    start             go to state 11
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 1

   19 Type: INT .

    $default  reduce using rule 19 (Type)


State 2

   20 Type: FLOAT .

    $default  reduce using rule 20 (Type)


State 3

   22 Type: CHAR .

    $default  reduce using rule 22 (Type)


State 4

   23 Type: DOUBLE .

    $default  reduce using rule 23 (Type)


State 5

   21 Type: VOID .

    $default  reduce using rule 21 (Type)


State 6

   31 Modifiers: SIGNED .

    $default  reduce using rule 31 (Modifiers)


State 7

   30 Modifiers: UNSIGNED .

    $default  reduce using rule 30 (Modifiers)


State 8

   29 Modifiers: LONG .

    $default  reduce using rule 29 (Modifiers)


State 9

   28 Modifiers: SHORT .

    $default  reduce using rule 28 (Modifiers)


State 10

    7 IncludeStatement: '#' . INCLUDE LT ID GT
    8                 | '#' . INCLUDE LT ID '.' ID GT

    INCLUDE  shift, and go to state 18


State 11

    0 $accept: start . $end

    $end  shift, and go to state 19


State 12

    9 Include: IncludeStatement .

    $default  reduce using rule 9 (Include)


State 13

    3 start: Include .
    6      | Include . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 3 (start)

    start             go to state 20
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 14

    1 start: FunctionDef .
    4      | FunctionDef . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 1 (start)

    start             go to state 21
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 15

    2 start: Declaration .
    5      | Declaration . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 2 (start)

    start             go to state 22
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 16

   10 FunctionDef: Type . ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement
   18 Declaration: Type . IDList ';'

    ID   shift, and go to state 23
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 26
    DefineAssign   go to state 27


State 17

   24 Type: Modifiers . INT
   25     | Modifiers . FLOAT
   26     | Modifiers . DOUBLE
   27     | Modifiers . CHAR

    INT     shift, and go to state 28
    FLOAT   shift, and go to state 29
    CHAR    shift, and go to state 30
    DOUBLE  shift, and go to state 31


State 18

    7 IncludeStatement: '#' INCLUDE . LT ID GT
    8                 | '#' INCLUDE . LT ID '.' ID GT

    LT  shift, and go to state 32


State 19

    0 $accept: start $end .

    $default  accept


State 20

    6 start: Include start .

    $default  reduce using rule 6 (start)


State 21

    4 start: FunctionDef start .

    $default  reduce using rule 4 (start)


State 22

    5 start: Declaration start .

    $default  reduce using rule 5 (start)


State 23

   10 FunctionDef: Type ID . OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement
   32 ArrayNotation: ID . '[' ']'
   33              | ID . '[' Expr ']'
   35 IDList: ID . ',' IDList
   38       | ID .
   42 DefineAssign: ID . '=' Expr
   43             | ID . PAS Expr
   44             | ID . SAS Expr
   45             | ID . MAS Expr
   46             | ID . DAS Expr

    OPEN_PAR  shift, and go to state 33
    '='       shift, and go to state 34
    PAS       shift, and go to state 35
    MAS       shift, and go to state 36
    DAS       shift, and go to state 37
    SAS       shift, and go to state 38
    ','       shift, and go to state 39
    '['       shift, and go to state 40

    $default  reduce using rule 38 (IDList)


State 24

   36 IDList: '*' . ID ',' IDList
   39       | '*' . ID
   47 DefineAssign: '*' . ID '=' Expr
   48             | '*' . ID PAS Expr
   49             | '*' . ID SAS Expr
   50             | '*' . ID MAS Expr
   51             | '*' . ID DAS Expr

    ID  shift, and go to state 41


State 25

   34 IDList: ArrayNotation .
   37       | ArrayNotation . ',' IDList
   52 DefineAssign: ArrayNotation . '=' Expr
   53             | ArrayNotation . PAS Expr
   54             | ArrayNotation . SAS Expr
   55             | ArrayNotation . MAS Expr
   56             | ArrayNotation . DAS Expr

    '='  shift, and go to state 42
    PAS  shift, and go to state 43
    MAS  shift, and go to state 44
    DAS  shift, and go to state 45
    SAS  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 34 (IDList)


State 26

   18 Declaration: Type IDList . ';'

    ';'  shift, and go to state 48


State 27

   40 IDList: DefineAssign . ',' IDList
   41       | DefineAssign .

    ','  shift, and go to state 49

    $default  reduce using rule 41 (IDList)


State 28

   24 Type: Modifiers INT .

    $default  reduce using rule 24 (Type)


State 29

   25 Type: Modifiers FLOAT .

    $default  reduce using rule 25 (Type)


State 30

   27 Type: Modifiers CHAR .

    $default  reduce using rule 27 (Type)


State 31

   26 Type: Modifiers DOUBLE .

    $default  reduce using rule 26 (Type)


State 32

    7 IncludeStatement: '#' INCLUDE LT . ID GT
    8                 | '#' INCLUDE LT . ID '.' ID GT

    ID  shift, and go to state 50


State 33

   10 FunctionDef: Type ID OPEN_PAR . FormalParamList CLOSE_PAR CompoundStatement

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 17 (FormalParamList)

    FormalParamList  go to state 51
    Type             go to state 52
    Modifiers        go to state 17


State 34

   42 DefineAssign: ID '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 66
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 35

   43 DefineAssign: ID PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 73
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 36

   45 DefineAssign: ID MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 74
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 37

   46 DefineAssign: ID DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 75
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 38

   44 DefineAssign: ID SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 76
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 39

   35 IDList: ID ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 78
    DefineAssign   go to state 27


State 40

   32 ArrayNotation: ID '[' . ']'
   33              | ID '[' . Expr ']'

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64
    ']'        shift, and go to state 79

    ArrayNotation        go to state 65
    Expr                 go to state 80
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 41

   36 IDList: '*' ID . ',' IDList
   39       | '*' ID .
   47 DefineAssign: '*' ID . '=' Expr
   48             | '*' ID . PAS Expr
   49             | '*' ID . SAS Expr
   50             | '*' ID . MAS Expr
   51             | '*' ID . DAS Expr

    '='  shift, and go to state 81
    PAS  shift, and go to state 82
    MAS  shift, and go to state 83
    DAS  shift, and go to state 84
    SAS  shift, and go to state 85
    ','  shift, and go to state 86

    $default  reduce using rule 39 (IDList)


State 42

   52 DefineAssign: ArrayNotation '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 87
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 43

   53 DefineAssign: ArrayNotation PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 88
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 44

   55 DefineAssign: ArrayNotation MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 89
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 45

   56 DefineAssign: ArrayNotation DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 90
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 46

   54 DefineAssign: ArrayNotation SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 91
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 47

   37 IDList: ArrayNotation ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 92
    DefineAssign   go to state 27


State 48

   18 Declaration: Type IDList ';' .

    $default  reduce using rule 18 (Declaration)


State 49

   40 IDList: DefineAssign ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 93
    DefineAssign   go to state 27


State 50

    7 IncludeStatement: '#' INCLUDE LT ID . GT
    8                 | '#' INCLUDE LT ID . '.' ID GT

    GT   shift, and go to state 94
    '.'  shift, and go to state 95


State 51

   10 FunctionDef: Type ID OPEN_PAR FormalParamList . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 96


State 52

   11 FormalParamList: Type . ID
   12                | Type . '*' ID
   13                | Type . ArrayNotation
   14                | Type . ID ',' FormalParamList
   15                | Type . '*' ID ',' FormalParamList
   16                | Type . ArrayNotation ',' FormalParamList

    ID   shift, and go to state 97
    '*'  shift, and go to state 98

    ArrayNotation  go to state 99


State 53

   96 Primary: NUM .

    $default  reduce using rule 96 (Primary)


State 54

   32 ArrayNotation: ID . '[' ']'
   33              | ID . '[' Expr ']'
  100 Primary: ID .
  107        | ID . PP
  109        | ID . MM
  134 FunctionCall: ID . OPEN_PAR ParamList CLOSE_PAR

    OPEN_PAR  shift, and go to state 100
    PP        shift, and go to state 101
    MM        shift, and go to state 102
    '['       shift, and go to state 40

    $default  reduce using rule 100 (Primary)


State 55

   97 Primary: FLOATNUM .

    $default  reduce using rule 97 (Primary)


State 56

   99 Primary: STRING .

    $default  reduce using rule 99 (Primary)


State 57

   98 Primary: CHARCONST .

    $default  reduce using rule 98 (Primary)


State 58

   95 Primary: OPEN_PAR . Expr CLOSE_PAR

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 103
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 59

   80 Logical_Expr: NOT . Relational_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 104
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 60

  106 Primary: PP . ID

    ID  shift, and go to state 105


State 61

  108 Primary: MM . ID

    ID  shift, and go to state 106


State 62

  103 Primary: '-' . Primary

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 107
    FunctionCall   go to state 72


State 63

  101 Primary: '*' . ID

    ID  shift, and go to state 108


State 64

  102 Primary: '&' . ID

    ID  shift, and go to state 109


State 65

  104 Primary: ArrayNotation .

    $default  reduce using rule 104 (Primary)


State 66

   42 DefineAssign: ID '=' Expr .

    $default  reduce using rule 42 (DefineAssign)


State 67

   76 Expr: Logical_Expr .
   78 Logical_Expr: Logical_Expr . AND Relational_Expr
   79             | Logical_Expr . OR Relational_Expr

    AND  shift, and go to state 110
    OR   shift, and go to state 111

    $default  reduce using rule 76 (Expr)


State 68

   77 Logical_Expr: Relational_Expr .
   82 Relational_Expr: Relational_Expr . GT Additive_Expr
   83                | Relational_Expr . LT Additive_Expr
   84                | Relational_Expr . GE Additive_Expr
   85                | Relational_Expr . LE Additive_Expr
   86                | Relational_Expr . EQ Additive_Expr
   87                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 77 (Logical_Expr)


State 69

   81 Relational_Expr: Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 81 (Relational_Expr)


State 70

   88 Additive_Expr: Multiplicative_Expr .
   92 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
   93                    | Multiplicative_Expr . '/' Primary
   94                    | Multiplicative_Expr . '%' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121
    '%'  shift, and go to state 122

    $default  reduce using rule 88 (Additive_Expr)


State 71

   91 Multiplicative_Expr: Primary .

    $default  reduce using rule 91 (Multiplicative_Expr)


State 72

  105 Primary: FunctionCall .

    $default  reduce using rule 105 (Primary)


State 73

   43 DefineAssign: ID PAS Expr .

    $default  reduce using rule 43 (DefineAssign)


State 74

   45 DefineAssign: ID MAS Expr .

    $default  reduce using rule 45 (DefineAssign)


State 75

   46 DefineAssign: ID DAS Expr .

    $default  reduce using rule 46 (DefineAssign)


State 76

   44 DefineAssign: ID SAS Expr .

    $default  reduce using rule 44 (DefineAssign)


State 77

   32 ArrayNotation: ID . '[' ']'
   33              | ID . '[' Expr ']'
   35 IDList: ID . ',' IDList
   38       | ID .
   42 DefineAssign: ID . '=' Expr
   43             | ID . PAS Expr
   44             | ID . SAS Expr
   45             | ID . MAS Expr
   46             | ID . DAS Expr

    '='  shift, and go to state 34
    PAS  shift, and go to state 35
    MAS  shift, and go to state 36
    DAS  shift, and go to state 37
    SAS  shift, and go to state 38
    ','  shift, and go to state 39
    '['  shift, and go to state 40

    $default  reduce using rule 38 (IDList)


State 78

   35 IDList: ID ',' IDList .

    $default  reduce using rule 35 (IDList)


State 79

   32 ArrayNotation: ID '[' ']' .

    $default  reduce using rule 32 (ArrayNotation)


State 80

   33 ArrayNotation: ID '[' Expr . ']'

    ']'  shift, and go to state 123


State 81

   47 DefineAssign: '*' ID '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 124
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 82

   48 DefineAssign: '*' ID PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 125
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 83

   50 DefineAssign: '*' ID MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 126
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 84

   51 DefineAssign: '*' ID DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 127
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 85

   49 DefineAssign: '*' ID SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 128
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 86

   36 IDList: '*' ID ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 129
    DefineAssign   go to state 27


State 87

   52 DefineAssign: ArrayNotation '=' Expr .

    $default  reduce using rule 52 (DefineAssign)


State 88

   53 DefineAssign: ArrayNotation PAS Expr .

    $default  reduce using rule 53 (DefineAssign)


State 89

   55 DefineAssign: ArrayNotation MAS Expr .

    $default  reduce using rule 55 (DefineAssign)


State 90

   56 DefineAssign: ArrayNotation DAS Expr .

    $default  reduce using rule 56 (DefineAssign)


State 91

   54 DefineAssign: ArrayNotation SAS Expr .

    $default  reduce using rule 54 (DefineAssign)


State 92

   37 IDList: ArrayNotation ',' IDList .

    $default  reduce using rule 37 (IDList)


State 93

   40 IDList: DefineAssign ',' IDList .

    $default  reduce using rule 40 (IDList)


State 94

    7 IncludeStatement: '#' INCLUDE LT ID GT .

    $default  reduce using rule 7 (IncludeStatement)


State 95

    8 IncludeStatement: '#' INCLUDE LT ID '.' . ID GT

    ID  shift, and go to state 130


State 96

   10 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR . CompoundStatement

    '{'  shift, and go to state 131

    CompoundStatement  go to state 132


State 97

   11 FormalParamList: Type ID .
   14                | Type ID . ',' FormalParamList
   32 ArrayNotation: ID . '[' ']'
   33              | ID . '[' Expr ']'

    ','  shift, and go to state 133
    '['  shift, and go to state 40

    $default  reduce using rule 11 (FormalParamList)


State 98

   12 FormalParamList: Type '*' . ID
   15                | Type '*' . ID ',' FormalParamList

    ID  shift, and go to state 134


State 99

   13 FormalParamList: Type ArrayNotation .
   16                | Type ArrayNotation . ',' FormalParamList

    ','  shift, and go to state 135

    $default  reduce using rule 13 (FormalParamList)


State 100

  134 FunctionCall: ID OPEN_PAR . ParamList CLOSE_PAR

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    $default  reduce using rule 59 (ParamList)

    ArrayNotation        go to state 65
    ParamList            go to state 136
    Expr                 go to state 137
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 101

  107 Primary: ID PP .

    $default  reduce using rule 107 (Primary)


State 102

  109 Primary: ID MM .

    $default  reduce using rule 109 (Primary)


State 103

   95 Primary: OPEN_PAR Expr . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 138


State 104

   80 Logical_Expr: NOT Relational_Expr .
   82 Relational_Expr: Relational_Expr . GT Additive_Expr
   83                | Relational_Expr . LT Additive_Expr
   84                | Relational_Expr . GE Additive_Expr
   85                | Relational_Expr . LE Additive_Expr
   86                | Relational_Expr . EQ Additive_Expr
   87                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 80 (Logical_Expr)


State 105

  106 Primary: PP ID .

    $default  reduce using rule 106 (Primary)


State 106

  108 Primary: MM ID .

    $default  reduce using rule 108 (Primary)


State 107

  103 Primary: '-' Primary .

    $default  reduce using rule 103 (Primary)


State 108

  101 Primary: '*' ID .

    $default  reduce using rule 101 (Primary)


State 109

  102 Primary: '&' ID .

    $default  reduce using rule 102 (Primary)


State 110

   78 Logical_Expr: Logical_Expr AND . Relational_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 139
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 111

   79 Logical_Expr: Logical_Expr OR . Relational_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 140
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 112

   85 Relational_Expr: Relational_Expr LE . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 141
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 113

   84 Relational_Expr: Relational_Expr GE . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 142
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 114

   86 Relational_Expr: Relational_Expr EQ . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 143
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 115

   87 Relational_Expr: Relational_Expr NE . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 144
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 116

   83 Relational_Expr: Relational_Expr LT . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 145
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 117

   82 Relational_Expr: Relational_Expr GT . Additive_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 146
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 118

   89 Additive_Expr: Additive_Expr '+' . Multiplicative_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Multiplicative_Expr  go to state 147
    Primary              go to state 71
    FunctionCall         go to state 72


State 119

   90 Additive_Expr: Additive_Expr '-' . Multiplicative_Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Multiplicative_Expr  go to state 148
    Primary              go to state 71
    FunctionCall         go to state 72


State 120

   92 Multiplicative_Expr: Multiplicative_Expr '*' . Primary

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 149
    FunctionCall   go to state 72


State 121

   93 Multiplicative_Expr: Multiplicative_Expr '/' . Primary

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 150
    FunctionCall   go to state 72


State 122

   94 Multiplicative_Expr: Multiplicative_Expr '%' . Primary

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 151
    FunctionCall   go to state 72


State 123

   33 ArrayNotation: ID '[' Expr ']' .

    $default  reduce using rule 33 (ArrayNotation)


State 124

   47 DefineAssign: '*' ID '=' Expr .

    $default  reduce using rule 47 (DefineAssign)


State 125

   48 DefineAssign: '*' ID PAS Expr .

    $default  reduce using rule 48 (DefineAssign)


State 126

   50 DefineAssign: '*' ID MAS Expr .

    $default  reduce using rule 50 (DefineAssign)


State 127

   51 DefineAssign: '*' ID DAS Expr .

    $default  reduce using rule 51 (DefineAssign)


State 128

   49 DefineAssign: '*' ID SAS Expr .

    $default  reduce using rule 49 (DefineAssign)


State 129

   36 IDList: '*' ID ',' IDList .

    $default  reduce using rule 36 (IDList)


State 130

    8 IncludeStatement: '#' INCLUDE LT ID '.' ID . GT

    GT  shift, and go to state 152


State 131

  110 CompoundStatement: '{' . StatementList '}'

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162

    $default  reduce using rule 112 (StatementList)

    Declaration       go to state 163
    Type              go to state 164
    Modifiers         go to state 17
    ArrayNotation     go to state 165
    Assignment        go to state 166
    Primary           go to state 167
    StatementList     go to state 168
    Statement         go to state 169
    ReturnStatement   go to state 170
    WhileStatement    go to state 171
    DoWhileStatement  go to state 172
    ForStatement      go to state 173
    IfStatement       go to state 174
    FunctionCall      go to state 72


State 132

   10 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement .

    $default  reduce using rule 10 (FunctionDef)


State 133

   14 FormalParamList: Type ID ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 17 (FormalParamList)

    FormalParamList  go to state 175
    Type             go to state 52
    Modifiers        go to state 17


State 134

   12 FormalParamList: Type '*' ID .
   15                | Type '*' ID . ',' FormalParamList

    ','  shift, and go to state 176

    $default  reduce using rule 12 (FormalParamList)


State 135

   16 FormalParamList: Type ArrayNotation ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 17 (FormalParamList)

    FormalParamList  go to state 177
    Type             go to state 52
    Modifiers        go to state 17


State 136

  134 FunctionCall: ID OPEN_PAR ParamList . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 178


State 137

   57 ParamList: Expr .
   58          | Expr . ',' ParamList

    ','  shift, and go to state 179

    $default  reduce using rule 57 (ParamList)


State 138

   95 Primary: OPEN_PAR Expr CLOSE_PAR .

    $default  reduce using rule 95 (Primary)


State 139

   78 Logical_Expr: Logical_Expr AND Relational_Expr .
   82 Relational_Expr: Relational_Expr . GT Additive_Expr
   83                | Relational_Expr . LT Additive_Expr
   84                | Relational_Expr . GE Additive_Expr
   85                | Relational_Expr . LE Additive_Expr
   86                | Relational_Expr . EQ Additive_Expr
   87                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 78 (Logical_Expr)


State 140

   79 Logical_Expr: Logical_Expr OR Relational_Expr .
   82 Relational_Expr: Relational_Expr . GT Additive_Expr
   83                | Relational_Expr . LT Additive_Expr
   84                | Relational_Expr . GE Additive_Expr
   85                | Relational_Expr . LE Additive_Expr
   86                | Relational_Expr . EQ Additive_Expr
   87                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 79 (Logical_Expr)


State 141

   85 Relational_Expr: Relational_Expr LE Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 85 (Relational_Expr)


State 142

   84 Relational_Expr: Relational_Expr GE Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 84 (Relational_Expr)


State 143

   86 Relational_Expr: Relational_Expr EQ Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 86 (Relational_Expr)


State 144

   87 Relational_Expr: Relational_Expr NE Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 87 (Relational_Expr)


State 145

   83 Relational_Expr: Relational_Expr LT Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 83 (Relational_Expr)


State 146

   82 Relational_Expr: Relational_Expr GT Additive_Expr .
   89 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
   90              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 82 (Relational_Expr)


State 147

   89 Additive_Expr: Additive_Expr '+' Multiplicative_Expr .
   92 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
   93                    | Multiplicative_Expr . '/' Primary
   94                    | Multiplicative_Expr . '%' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121
    '%'  shift, and go to state 122

    $default  reduce using rule 89 (Additive_Expr)


State 148

   90 Additive_Expr: Additive_Expr '-' Multiplicative_Expr .
   92 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
   93                    | Multiplicative_Expr . '/' Primary
   94                    | Multiplicative_Expr . '%' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121
    '%'  shift, and go to state 122

    $default  reduce using rule 90 (Additive_Expr)


State 149

   92 Multiplicative_Expr: Multiplicative_Expr '*' Primary .

    $default  reduce using rule 92 (Multiplicative_Expr)


State 150

   93 Multiplicative_Expr: Multiplicative_Expr '/' Primary .

    $default  reduce using rule 93 (Multiplicative_Expr)


State 151

   94 Multiplicative_Expr: Multiplicative_Expr '%' Primary .

    $default  reduce using rule 94 (Multiplicative_Expr)


State 152

    8 IncludeStatement: '#' INCLUDE LT ID '.' ID GT .

    $default  reduce using rule 8 (IncludeStatement)


State 153

  123 ReturnStatement: RETURN . Expr ';'

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 180
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 154

  120 Statement: BREAK . ';'

    ';'  shift, and go to state 181


State 155

  121 Statement: CONTINUE . ';'

    ';'  shift, and go to state 182


State 156

  127 ForStatement: FOR . OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  128             | FOR . OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    OPEN_PAR  shift, and go to state 183


State 157

  124 WhileStatement: WHILE . OPEN_PAR Expr CLOSE_PAR Statement
  125               | WHILE . OPEN_PAR Expr CLOSE_PAR CompoundStatement

    OPEN_PAR  shift, and go to state 184


State 158

  126 DoWhileStatement: DO . CompoundStatement WHILE OPEN_PAR Expr CLOSE_PAR ';'

    '{'  shift, and go to state 131

    CompoundStatement  go to state 185


State 159

  129 IfStatement: IF . OPEN_PAR Expr CLOSE_PAR Statement ElseStatement
  130            | IF . OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement

    OPEN_PAR  shift, and go to state 186


State 160

   32 ArrayNotation: ID . '[' ']'
   33              | ID . '[' Expr ']'
   60 Assignment: ID . '=' Expr
   61           | ID . PAS Expr
   62           | ID . SAS Expr
   63           | ID . MAS Expr
   64           | ID . DAS Expr
  100 Primary: ID .
  107        | ID . PP
  109        | ID . MM
  134 FunctionCall: ID . OPEN_PAR ParamList CLOSE_PAR

    OPEN_PAR  shift, and go to state 100
    '='       shift, and go to state 187
    PAS       shift, and go to state 188
    MAS       shift, and go to state 189
    DAS       shift, and go to state 190
    SAS       shift, and go to state 191
    PP        shift, and go to state 101
    MM        shift, and go to state 102
    '['       shift, and go to state 40

    $default  reduce using rule 100 (Primary)


State 161

   65 Assignment: '*' . ID '=' Expr
   66           | '*' . ID PAS Expr
   67           | '*' . ID SAS Expr
   68           | '*' . ID MAS Expr
   69           | '*' . ID DAS Expr
  101 Primary: '*' . ID

    ID  shift, and go to state 192


State 162

  122 Statement: ';' .

    $default  reduce using rule 122 (Statement)


State 163

  114 Statement: Declaration .

    $default  reduce using rule 114 (Statement)


State 164

   18 Declaration: Type . IDList ';'

    ID   shift, and go to state 77
    '*'  shift, and go to state 24

    ArrayNotation  go to state 25
    IDList         go to state 26
    DefineAssign   go to state 27


State 165

   70 Assignment: ArrayNotation . '=' Expr
   71           | ArrayNotation . PAS Expr
   72           | ArrayNotation . SAS Expr
   73           | ArrayNotation . MAS Expr
   74           | ArrayNotation . DAS Expr
  104 Primary: ArrayNotation .

    '='  shift, and go to state 193
    PAS  shift, and go to state 194
    MAS  shift, and go to state 195
    DAS  shift, and go to state 196
    SAS  shift, and go to state 197

    $default  reduce using rule 104 (Primary)


State 166

  117 Statement: Assignment . ';'

    ';'  shift, and go to state 198


State 167

   75 Assignment: Primary .

    $default  reduce using rule 75 (Assignment)


State 168

  110 CompoundStatement: '{' StatementList . '}'

    '}'  shift, and go to state 199


State 169

  111 StatementList: Statement . StatementList

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162

    $default  reduce using rule 112 (StatementList)

    Declaration       go to state 163
    Type              go to state 164
    Modifiers         go to state 17
    ArrayNotation     go to state 165
    Assignment        go to state 166
    Primary           go to state 167
    StatementList     go to state 200
    Statement         go to state 169
    ReturnStatement   go to state 170
    WhileStatement    go to state 171
    DoWhileStatement  go to state 172
    ForStatement      go to state 173
    IfStatement       go to state 174
    FunctionCall      go to state 72


State 170

  118 Statement: ReturnStatement .

    $default  reduce using rule 118 (Statement)


State 171

  113 Statement: WhileStatement .

    $default  reduce using rule 113 (Statement)


State 172

  119 Statement: DoWhileStatement .

    $default  reduce using rule 119 (Statement)


State 173

  115 Statement: ForStatement .

    $default  reduce using rule 115 (Statement)


State 174

  116 Statement: IfStatement .

    $default  reduce using rule 116 (Statement)


State 175

   14 FormalParamList: Type ID ',' FormalParamList .

    $default  reduce using rule 14 (FormalParamList)


State 176

   15 FormalParamList: Type '*' ID ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 17 (FormalParamList)

    FormalParamList  go to state 201
    Type             go to state 52
    Modifiers        go to state 17


State 177

   16 FormalParamList: Type ArrayNotation ',' FormalParamList .

    $default  reduce using rule 16 (FormalParamList)


State 178

  134 FunctionCall: ID OPEN_PAR ParamList CLOSE_PAR .

    $default  reduce using rule 134 (FunctionCall)


State 179

   58 ParamList: Expr ',' . ParamList

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    $default  reduce using rule 59 (ParamList)

    ArrayNotation        go to state 65
    ParamList            go to state 202
    Expr                 go to state 137
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 180

  123 ReturnStatement: RETURN Expr . ';'

    ';'  shift, and go to state 203


State 181

  120 Statement: BREAK ';' .

    $default  reduce using rule 120 (Statement)


State 182

  121 Statement: CONTINUE ';' .

    $default  reduce using rule 121 (Statement)


State 183

  127 ForStatement: FOR OPEN_PAR . Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR . Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64

    ArrayNotation  go to state 165
    Assignment     go to state 204
    Primary        go to state 167
    FunctionCall   go to state 72


State 184

  124 WhileStatement: WHILE OPEN_PAR . Expr CLOSE_PAR Statement
  125               | WHILE OPEN_PAR . Expr CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 205
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 185

  126 DoWhileStatement: DO CompoundStatement . WHILE OPEN_PAR Expr CLOSE_PAR ';'

    WHILE  shift, and go to state 206


State 186

  129 IfStatement: IF OPEN_PAR . Expr CLOSE_PAR Statement ElseStatement
  130            | IF OPEN_PAR . Expr CLOSE_PAR CompoundStatement ElseStatement

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 207
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 187

   60 Assignment: ID '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 208
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 188

   61 Assignment: ID PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 209
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 189

   63 Assignment: ID MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 210
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 190

   64 Assignment: ID DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 211
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 191

   62 Assignment: ID SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 212
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 192

   65 Assignment: '*' ID . '=' Expr
   66           | '*' ID . PAS Expr
   67           | '*' ID . SAS Expr
   68           | '*' ID . MAS Expr
   69           | '*' ID . DAS Expr
  101 Primary: '*' ID .

    '='  shift, and go to state 213
    PAS  shift, and go to state 214
    MAS  shift, and go to state 215
    DAS  shift, and go to state 216
    SAS  shift, and go to state 217

    $default  reduce using rule 101 (Primary)


State 193

   70 Assignment: ArrayNotation '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 218
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 194

   71 Assignment: ArrayNotation PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 219
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 195

   73 Assignment: ArrayNotation MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 220
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 196

   74 Assignment: ArrayNotation DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 221
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 197

   72 Assignment: ArrayNotation SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 222
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 198

  117 Statement: Assignment ';' .

    $default  reduce using rule 117 (Statement)


State 199

  110 CompoundStatement: '{' StatementList '}' .

    $default  reduce using rule 110 (CompoundStatement)


State 200

  111 StatementList: Statement StatementList .

    $default  reduce using rule 111 (StatementList)


State 201

   15 FormalParamList: Type '*' ID ',' FormalParamList .

    $default  reduce using rule 15 (FormalParamList)


State 202

   58 ParamList: Expr ',' ParamList .

    $default  reduce using rule 58 (ParamList)


State 203

  123 ReturnStatement: RETURN Expr ';' .

    $default  reduce using rule 123 (ReturnStatement)


State 204

  127 ForStatement: FOR OPEN_PAR Assignment . ';' Expr ';' Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment . ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    ';'  shift, and go to state 223


State 205

  124 WhileStatement: WHILE OPEN_PAR Expr . CLOSE_PAR Statement
  125               | WHILE OPEN_PAR Expr . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 224


State 206

  126 DoWhileStatement: DO CompoundStatement WHILE . OPEN_PAR Expr CLOSE_PAR ';'

    OPEN_PAR  shift, and go to state 225


State 207

  129 IfStatement: IF OPEN_PAR Expr . CLOSE_PAR Statement ElseStatement
  130            | IF OPEN_PAR Expr . CLOSE_PAR CompoundStatement ElseStatement

    CLOSE_PAR  shift, and go to state 226


State 208

   60 Assignment: ID '=' Expr .

    $default  reduce using rule 60 (Assignment)


State 209

   61 Assignment: ID PAS Expr .

    $default  reduce using rule 61 (Assignment)


State 210

   63 Assignment: ID MAS Expr .

    $default  reduce using rule 63 (Assignment)


State 211

   64 Assignment: ID DAS Expr .

    $default  reduce using rule 64 (Assignment)


State 212

   62 Assignment: ID SAS Expr .

    $default  reduce using rule 62 (Assignment)


State 213

   65 Assignment: '*' ID '=' . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 227
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 214

   66 Assignment: '*' ID PAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 228
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 215

   68 Assignment: '*' ID MAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 229
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 216

   69 Assignment: '*' ID DAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 230
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 217

   67 Assignment: '*' ID SAS . Expr

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 231
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 218

   70 Assignment: ArrayNotation '=' Expr .

    $default  reduce using rule 70 (Assignment)


State 219

   71 Assignment: ArrayNotation PAS Expr .

    $default  reduce using rule 71 (Assignment)


State 220

   73 Assignment: ArrayNotation MAS Expr .

    $default  reduce using rule 73 (Assignment)


State 221

   74 Assignment: ArrayNotation DAS Expr .

    $default  reduce using rule 74 (Assignment)


State 222

   72 Assignment: ArrayNotation SAS Expr .

    $default  reduce using rule 72 (Assignment)


State 223

  127 ForStatement: FOR OPEN_PAR Assignment ';' . Expr ';' Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment ';' . Expr ';' Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 232
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 224

  124 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR . Statement
  125               | WHILE OPEN_PAR Expr CLOSE_PAR . CompoundStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162
    '{'        shift, and go to state 131

    Declaration        go to state 163
    Type               go to state 164
    Modifiers          go to state 17
    ArrayNotation      go to state 165
    Assignment         go to state 166
    Primary            go to state 167
    CompoundStatement  go to state 233
    Statement          go to state 234
    ReturnStatement    go to state 170
    WhileStatement     go to state 171
    DoWhileStatement   go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 72


State 225

  126 DoWhileStatement: DO CompoundStatement WHILE OPEN_PAR . Expr CLOSE_PAR ';'

    NUM        shift, and go to state 53
    ID         shift, and go to state 54
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 235
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 226

  129 IfStatement: IF OPEN_PAR Expr CLOSE_PAR . Statement ElseStatement
  130            | IF OPEN_PAR Expr CLOSE_PAR . CompoundStatement ElseStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162
    '{'        shift, and go to state 131

    Declaration        go to state 163
    Type               go to state 164
    Modifiers          go to state 17
    ArrayNotation      go to state 165
    Assignment         go to state 166
    Primary            go to state 167
    CompoundStatement  go to state 236
    Statement          go to state 237
    ReturnStatement    go to state 170
    WhileStatement     go to state 171
    DoWhileStatement   go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 72


State 227

   65 Assignment: '*' ID '=' Expr .

    $default  reduce using rule 65 (Assignment)


State 228

   66 Assignment: '*' ID PAS Expr .

    $default  reduce using rule 66 (Assignment)


State 229

   68 Assignment: '*' ID MAS Expr .

    $default  reduce using rule 68 (Assignment)


State 230

   69 Assignment: '*' ID DAS Expr .

    $default  reduce using rule 69 (Assignment)


State 231

   67 Assignment: '*' ID SAS Expr .

    $default  reduce using rule 67 (Assignment)


State 232

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr . ';' Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment ';' Expr . ';' Assignment CLOSE_PAR CompoundStatement

    ';'  shift, and go to state 238


State 233

  125 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR CompoundStatement .

    $default  reduce using rule 125 (WhileStatement)


State 234

  124 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR Statement .

    $default  reduce using rule 124 (WhileStatement)


State 235

  126 DoWhileStatement: DO CompoundStatement WHILE OPEN_PAR Expr . CLOSE_PAR ';'

    CLOSE_PAR  shift, and go to state 239


State 236

  130 IfStatement: IF OPEN_PAR Expr CLOSE_PAR CompoundStatement . ElseStatement

    ELSE  shift, and go to state 240

    ELSE      [reduce using rule 133 (ElseStatement)]
    $default  reduce using rule 133 (ElseStatement)

    ElseStatement  go to state 241


State 237

  129 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement . ElseStatement

    ELSE  shift, and go to state 240

    ELSE      [reduce using rule 133 (ElseStatement)]
    $default  reduce using rule 133 (ElseStatement)

    ElseStatement  go to state 242


State 238

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' . Assignment CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment ';' Expr ';' . Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64

    ArrayNotation  go to state 165
    Assignment     go to state 243
    Primary        go to state 167
    FunctionCall   go to state 72


State 239

  126 DoWhileStatement: DO CompoundStatement WHILE OPEN_PAR Expr CLOSE_PAR . ';'

    ';'  shift, and go to state 244


State 240

  131 ElseStatement: ELSE . CompoundStatement
  132              | ELSE . Statement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162
    '{'        shift, and go to state 131

    Declaration        go to state 163
    Type               go to state 164
    Modifiers          go to state 17
    ArrayNotation      go to state 165
    Assignment         go to state 166
    Primary            go to state 167
    CompoundStatement  go to state 245
    Statement          go to state 246
    ReturnStatement    go to state 170
    WhileStatement     go to state 171
    DoWhileStatement   go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 72


State 241

  130 IfStatement: IF OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement .

    $default  reduce using rule 130 (IfStatement)


State 242

  129 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement ElseStatement .

    $default  reduce using rule 129 (IfStatement)


State 243

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment . CLOSE_PAR Statement
  128             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 247


State 244

  126 DoWhileStatement: DO CompoundStatement WHILE OPEN_PAR Expr CLOSE_PAR ';' .

    $default  reduce using rule 126 (DoWhileStatement)


State 245

  131 ElseStatement: ELSE CompoundStatement .

    $default  reduce using rule 131 (ElseStatement)


State 246

  132 ElseStatement: ELSE Statement .

    $default  reduce using rule 132 (ElseStatement)


State 247

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR . Statement
  128             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR . CompoundStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 153
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    BREAK      shift, and go to state 154
    CONTINUE   shift, and go to state 155
    FOR        shift, and go to state 156
    WHILE      shift, and go to state 157
    DO         shift, and go to state 158
    IF         shift, and go to state 159
    NUM        shift, and go to state 53
    ID         shift, and go to state 160
    FLOATNUM   shift, and go to state 55
    STRING     shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 161
    '&'        shift, and go to state 64
    ';'        shift, and go to state 162
    '{'        shift, and go to state 131

    Declaration        go to state 163
    Type               go to state 164
    Modifiers          go to state 17
    ArrayNotation      go to state 165
    Assignment         go to state 166
    Primary            go to state 167
    CompoundStatement  go to state 248
    Statement          go to state 249
    ReturnStatement    go to state 170
    WhileStatement     go to state 171
    DoWhileStatement   go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 72


State 248

  128 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement .

    $default  reduce using rule 128 (ForStatement)


State 249

  127 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement .

    $default  reduce using rule 127 (ForStatement)
