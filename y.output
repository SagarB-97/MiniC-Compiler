Terminals unused in grammar

   SWITCH
   BREAK
   CONTINUE
   CASE
   DEFAULT
   DO
   STRUCT
   '%'
   '^'


State 12 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce, 1 reduce/reduce
State 136 conflicts: 1 shift/reduce, 1 reduce/reduce
State 140 conflicts: 1 shift/reduce, 1 reduce/reduce
State 175 conflicts: 1 shift/reduce
State 182 conflicts: 1 shift/reduce, 1 reduce/reduce
State 183 conflicts: 1 shift/reduce
State 188 conflicts: 1 shift/reduce
State 248 conflicts: 1 shift/reduce
State 249 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: FunctionDef
    2      | Declaration
    3      | Include
    4      | FunctionDef start
    5      | Declaration start
    6      | Include start

    7 IncludeStatement: '#' INCLUDE LT ID GT
    8                 | '#' INCLUDE LT ID '.' ID GT

    9 Include: IncludeStatement
   10        | IncludeStatement Include

   11 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement

   12 FormalParamList: Type ID
   13                | Type '*' ID
   14                | Type ArrayNotation
   15                | Type ID ',' FormalParamList
   16                | Type '*' ID ',' FormalParamList
   17                | Type ArrayNotation ',' FormalParamList
   18                | %empty

   19 Declaration: Type IDList ';'

   20 Type: INT
   21     | FLOAT
   22     | VOID
   23     | CHAR
   24     | DOUBLE
   25     | Modifiers INT
   26     | Modifiers FLOAT
   27     | Modifiers DOUBLE
   28     | Modifiers CHAR

   29 Modifiers: SHORT
   30          | LONG
   31          | UNSIGNED
   32          | SIGNED

   33 ArrayNotation: ID '[' ']'
   34              | ID '[' Expr ']'

   35 IDList: ArrayNotation
   36       | ID ',' IDList
   37       | '*' ID ',' IDList
   38       | ArrayNotation ',' IDList
   39       | ID
   40       | '*' ID
   41       | DefineAssign ',' IDList
   42       | DefineAssign

   43 DefineAssign: ID '=' Expr
   44             | ID PAS Expr
   45             | ID SAS Expr
   46             | ID MAS Expr
   47             | ID DAS Expr
   48             | '*' ID '=' Expr
   49             | '*' ID PAS Expr
   50             | '*' ID SAS Expr
   51             | '*' ID MAS Expr
   52             | '*' ID DAS Expr
   53             | ArrayNotation '=' Expr
   54             | ArrayNotation PAS Expr
   55             | ArrayNotation SAS Expr
   56             | ArrayNotation MAS Expr
   57             | ArrayNotation DAS Expr

   58 ParamList: ArrayNotation
   59          | ID ',' ParamList
   60          | '*' ID ',' ParamList
   61          | '&' ID ',' ParamList
   62          | ArrayNotation ',' ParamList
   63          | STRING ',' ParamList
   64          | NUM ',' ParamList
   65          | ID
   66          | NUM
   67          | STRING
   68          | '*' ID
   69          | Expr
   70          | Expr ',' ParamList

   71 Assignment: ID '=' Expr
   72           | ID PAS Expr
   73           | ID SAS Expr
   74           | ID MAS Expr
   75           | ID DAS Expr
   76           | '*' ID '=' Expr
   77           | '*' ID PAS Expr
   78           | '*' ID SAS Expr
   79           | '*' ID MAS Expr
   80           | '*' ID DAS Expr
   81           | ArrayNotation '=' Expr
   82           | ArrayNotation PAS Expr
   83           | ArrayNotation SAS Expr
   84           | ArrayNotation MAS Expr
   85           | ArrayNotation DAS Expr
   86           | Primary

   87 Expr: Logical_Expr

   88 Logical_Expr: Relational_Expr
   89             | Logical_Expr AND Relational_Expr
   90             | Logical_Expr OR Relational_Expr
   91             | NOT Relational_Expr

   92 Relational_Expr: Additive_Expr
   93                | Relational_Expr GT Additive_Expr
   94                | Relational_Expr LT Additive_Expr
   95                | Relational_Expr GE Additive_Expr
   96                | Relational_Expr LE Additive_Expr
   97                | Relational_Expr EQ Additive_Expr
   98                | Relational_Expr NE Additive_Expr

   99 Additive_Expr: Multiplicative_Expr
  100              | Additive_Expr '+' Multiplicative_Expr
  101              | Additive_Expr '-' Multiplicative_Expr

  102 Multiplicative_Expr: Primary
  103                    | Multiplicative_Expr '*' Primary
  104                    | Multiplicative_Expr '/' Primary

  105 Primary: OPEN_PAR Expr CLOSE_PAR
  106        | NUM
  107        | FLOATNUM
  108        | CHARCONST
  109        | ID
  110        | '*' ID
  111        | '&' ID
  112        | '-' Primary
  113        | ArrayNotation
  114        | FunctionCall
  115        | PP ID
  116        | ID PP
  117        | MM ID
  118        | ID MM

  119 CompoundStatement: '{' StatementList '}'

  120 StatementList: Statement StatementList
  121              | %empty

  122 Statement: WhileStatement
  123          | Declaration
  124          | ForStatement
  125          | IfStatement
  126          | FunctionCall ';'
  127          | Assignment ';'
  128          | ReturnStatement
  129          | ';'

  130 ReturnStatement: RETURN Expr ';'
  131                | RETURN FunctionCall ';'

  132 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR Statement
  133               | WHILE OPEN_PAR Expr CLOSE_PAR CompoundStatement

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

  136 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement ElseStatement
  137            | IF OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement

  138 ElseStatement: ELSE CompoundStatement
  139              | ELSE Statement
  140              | %empty

  141 FunctionCall: ID OPEN_PAR ParamList CLOSE_PAR


Terminals, with rules where they appear

$end (0) 0
'#' (35) 7 8
'%' (37)
'&' (38) 61 111
'*' (42) 13 16 37 40 48 49 50 51 52 60 68 76 77 78 79 80 103 110
'+' (43) 100
',' (44) 15 16 17 36 37 38 41 59 60 61 62 63 64 70
'-' (45) 101 112
'.' (46) 8
'/' (47) 104
';' (59) 19 126 127 129 130 131 134 135
'=' (61) 43 48 53 71 76 81
'[' (91) 33 34
']' (93) 33 34
'^' (94)
'{' (123) 119
'}' (125) 119
error (256)
INT (258) 20 25
FLOAT (259) 21 26
CHAR (260) 23 28
DOUBLE (261) 24 27
VOID (262) 22
RETURN (263) 130 131
SIGNED (264) 32
UNSIGNED (265) 31
LONG (266) 30
SHORT (267) 29
SWITCH (268)
BREAK (269)
CONTINUE (270)
CASE (271)
DEFAULT (272)
FOR (273) 134 135
WHILE (274) 132 133
DO (275)
IF (276) 136 137
ELSE (277) 138 139
STRUCT (278)
NUM (279) 64 66 106
ID (280) 7 8 11 12 13 15 16 33 34 36 37 39 40 43 44 45 46 47 48 49
    50 51 52 59 60 61 65 68 71 72 73 74 75 76 77 78 79 80 109 110 111
    115 116 117 118 141
FLOATNUM (281) 107
STRING (282) 63 67
CHARCONST (283) 108
INCLUDE (284) 7 8
OPEN_PAR (285) 11 105 132 133 134 135 136 137 141
CLOSE_PAR (286) 11 105 132 133 134 135 136 137 141
PAS (287) 44 49 54 72 77 82
MAS (288) 46 51 56 74 79 84
DAS (289) 47 52 57 75 80 85
SAS (290) 45 50 55 73 78 83
AND (291) 89
OR (292) 90
NOT (293) 91
PP (294) 115 116
MM (295) 117 118
LE (296) 96
GE (297) 95
EQ (298) 97
NE (299) 98
LT (300) 7 8 94
GT (301) 7 8 93


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
start (64)
    on left: 1 2 3 4 5 6, on right: 0 4 5 6
IncludeStatement (65)
    on left: 7 8, on right: 9 10
Include (66)
    on left: 9 10, on right: 3 6 10
FunctionDef (67)
    on left: 11, on right: 1 4
FormalParamList (68)
    on left: 12 13 14 15 16 17 18, on right: 11 15 16 17
Declaration (69)
    on left: 19, on right: 2 5 123
Type (70)
    on left: 20 21 22 23 24 25 26 27 28, on right: 11 12 13 14 15 16
    17 19
Modifiers (71)
    on left: 29 30 31 32, on right: 25 26 27 28
ArrayNotation (72)
    on left: 33 34, on right: 14 17 35 38 53 54 55 56 57 58 62 81 82
    83 84 85 113
IDList (73)
    on left: 35 36 37 38 39 40 41 42, on right: 19 36 37 38 41
DefineAssign (74)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57, on right:
    41 42
ParamList (75)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 59 60
    61 62 63 64 70 141
Assignment (76)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86, on right:
    127 134 135
Expr (77)
    on left: 87, on right: 34 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 105 130
    132 133 134 135 136 137
Logical_Expr (78)
    on left: 88 89 90 91, on right: 87 89 90
Relational_Expr (79)
    on left: 92 93 94 95 96 97 98, on right: 88 89 90 91 93 94 95 96
    97 98
Additive_Expr (80)
    on left: 99 100 101, on right: 92 93 94 95 96 97 98 100 101
Multiplicative_Expr (81)
    on left: 102 103 104, on right: 99 100 101 103 104
Primary (82)
    on left: 105 106 107 108 109 110 111 112 113 114 115 116 117 118,
    on right: 86 102 103 104 112
CompoundStatement (83)
    on left: 119, on right: 11 133 135 137 138
StatementList (84)
    on left: 120 121, on right: 119 120
Statement (85)
    on left: 122 123 124 125 126 127 128 129, on right: 120 132 134
    136 139
ReturnStatement (86)
    on left: 130 131, on right: 128
WhileStatement (87)
    on left: 132 133, on right: 122
ForStatement (88)
    on left: 134 135, on right: 124
IfStatement (89)
    on left: 136 137, on right: 125
ElseStatement (90)
    on left: 138 139 140, on right: 136 137
FunctionCall (91)
    on left: 141, on right: 114 126 131


State 0

    0 $accept: . start $end

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    start             go to state 11
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 1

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 2

   21 Type: FLOAT .

    $default  reduce using rule 21 (Type)


State 3

   23 Type: CHAR .

    $default  reduce using rule 23 (Type)


State 4

   24 Type: DOUBLE .

    $default  reduce using rule 24 (Type)


State 5

   22 Type: VOID .

    $default  reduce using rule 22 (Type)


State 6

   32 Modifiers: SIGNED .

    $default  reduce using rule 32 (Modifiers)


State 7

   31 Modifiers: UNSIGNED .

    $default  reduce using rule 31 (Modifiers)


State 8

   30 Modifiers: LONG .

    $default  reduce using rule 30 (Modifiers)


State 9

   29 Modifiers: SHORT .

    $default  reduce using rule 29 (Modifiers)


State 10

    7 IncludeStatement: '#' . INCLUDE LT ID GT
    8                 | '#' . INCLUDE LT ID '.' ID GT

    INCLUDE  shift, and go to state 18


State 11

    0 $accept: start . $end

    $end  shift, and go to state 19


State 12

    9 Include: IncludeStatement .
   10        | IncludeStatement . Include

    '#'  shift, and go to state 10

    '#'       [reduce using rule 9 (Include)]
    $default  reduce using rule 9 (Include)

    IncludeStatement  go to state 12
    Include           go to state 20


State 13

    3 start: Include .
    6      | Include . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 3 (start)

    start             go to state 21
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 14

    1 start: FunctionDef .
    4      | FunctionDef . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 1 (start)

    start             go to state 22
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 15

    2 start: Declaration .
    5      | Declaration . start

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9
    '#'       shift, and go to state 10

    $default  reduce using rule 2 (start)

    start             go to state 23
    IncludeStatement  go to state 12
    Include           go to state 13
    FunctionDef       go to state 14
    Declaration       go to state 15
    Type              go to state 16
    Modifiers         go to state 17


State 16

   11 FunctionDef: Type . ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement
   19 Declaration: Type . IDList ';'

    ID   shift, and go to state 24
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 27
    DefineAssign   go to state 28


State 17

   25 Type: Modifiers . INT
   26     | Modifiers . FLOAT
   27     | Modifiers . DOUBLE
   28     | Modifiers . CHAR

    INT     shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    DOUBLE  shift, and go to state 32


State 18

    7 IncludeStatement: '#' INCLUDE . LT ID GT
    8                 | '#' INCLUDE . LT ID '.' ID GT

    LT  shift, and go to state 33


State 19

    0 $accept: start $end .

    $default  accept


State 20

   10 Include: IncludeStatement Include .

    $default  reduce using rule 10 (Include)


State 21

    6 start: Include start .

    $default  reduce using rule 6 (start)


State 22

    4 start: FunctionDef start .

    $default  reduce using rule 4 (start)


State 23

    5 start: Declaration start .

    $default  reduce using rule 5 (start)


State 24

   11 FunctionDef: Type ID . OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement
   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'
   36 IDList: ID . ',' IDList
   39       | ID .
   43 DefineAssign: ID . '=' Expr
   44             | ID . PAS Expr
   45             | ID . SAS Expr
   46             | ID . MAS Expr
   47             | ID . DAS Expr

    OPEN_PAR  shift, and go to state 34
    '='       shift, and go to state 35
    PAS       shift, and go to state 36
    MAS       shift, and go to state 37
    DAS       shift, and go to state 38
    SAS       shift, and go to state 39
    ','       shift, and go to state 40
    '['       shift, and go to state 41

    $default  reduce using rule 39 (IDList)


State 25

   37 IDList: '*' . ID ',' IDList
   40       | '*' . ID
   48 DefineAssign: '*' . ID '=' Expr
   49             | '*' . ID PAS Expr
   50             | '*' . ID SAS Expr
   51             | '*' . ID MAS Expr
   52             | '*' . ID DAS Expr

    ID  shift, and go to state 42


State 26

   35 IDList: ArrayNotation .
   38       | ArrayNotation . ',' IDList
   53 DefineAssign: ArrayNotation . '=' Expr
   54             | ArrayNotation . PAS Expr
   55             | ArrayNotation . SAS Expr
   56             | ArrayNotation . MAS Expr
   57             | ArrayNotation . DAS Expr

    '='  shift, and go to state 43
    PAS  shift, and go to state 44
    MAS  shift, and go to state 45
    DAS  shift, and go to state 46
    SAS  shift, and go to state 47
    ','  shift, and go to state 48

    $default  reduce using rule 35 (IDList)


State 27

   19 Declaration: Type IDList . ';'

    ';'  shift, and go to state 49


State 28

   41 IDList: DefineAssign . ',' IDList
   42       | DefineAssign .

    ','  shift, and go to state 50

    $default  reduce using rule 42 (IDList)


State 29

   25 Type: Modifiers INT .

    $default  reduce using rule 25 (Type)


State 30

   26 Type: Modifiers FLOAT .

    $default  reduce using rule 26 (Type)


State 31

   28 Type: Modifiers CHAR .

    $default  reduce using rule 28 (Type)


State 32

   27 Type: Modifiers DOUBLE .

    $default  reduce using rule 27 (Type)


State 33

    7 IncludeStatement: '#' INCLUDE LT . ID GT
    8                 | '#' INCLUDE LT . ID '.' ID GT

    ID  shift, and go to state 51


State 34

   11 FunctionDef: Type ID OPEN_PAR . FormalParamList CLOSE_PAR CompoundStatement

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 18 (FormalParamList)

    FormalParamList  go to state 52
    Type             go to state 53
    Modifiers        go to state 17


State 35

   43 DefineAssign: ID '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 66
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 36

   44 DefineAssign: ID PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 73
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 37

   46 DefineAssign: ID MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 74
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 38

   47 DefineAssign: ID DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 75
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 39

   45 DefineAssign: ID SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 76
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 40

   36 IDList: ID ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 78
    DefineAssign   go to state 28


State 41

   33 ArrayNotation: ID '[' . ']'
   34              | ID '[' . Expr ']'

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64
    ']'        shift, and go to state 79

    ArrayNotation        go to state 65
    Expr                 go to state 80
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 42

   37 IDList: '*' ID . ',' IDList
   40       | '*' ID .
   48 DefineAssign: '*' ID . '=' Expr
   49             | '*' ID . PAS Expr
   50             | '*' ID . SAS Expr
   51             | '*' ID . MAS Expr
   52             | '*' ID . DAS Expr

    '='  shift, and go to state 81
    PAS  shift, and go to state 82
    MAS  shift, and go to state 83
    DAS  shift, and go to state 84
    SAS  shift, and go to state 85
    ','  shift, and go to state 86

    $default  reduce using rule 40 (IDList)


State 43

   53 DefineAssign: ArrayNotation '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 87
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 44

   54 DefineAssign: ArrayNotation PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 88
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 45

   56 DefineAssign: ArrayNotation MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 89
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 46

   57 DefineAssign: ArrayNotation DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 90
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 47

   55 DefineAssign: ArrayNotation SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 91
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 48

   38 IDList: ArrayNotation ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 92
    DefineAssign   go to state 28


State 49

   19 Declaration: Type IDList ';' .

    $default  reduce using rule 19 (Declaration)


State 50

   41 IDList: DefineAssign ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 93
    DefineAssign   go to state 28


State 51

    7 IncludeStatement: '#' INCLUDE LT ID . GT
    8                 | '#' INCLUDE LT ID . '.' ID GT

    GT   shift, and go to state 94
    '.'  shift, and go to state 95


State 52

   11 FunctionDef: Type ID OPEN_PAR FormalParamList . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 96


State 53

   12 FormalParamList: Type . ID
   13                | Type . '*' ID
   14                | Type . ArrayNotation
   15                | Type . ID ',' FormalParamList
   16                | Type . '*' ID ',' FormalParamList
   17                | Type . ArrayNotation ',' FormalParamList

    ID   shift, and go to state 97
    '*'  shift, and go to state 98

    ArrayNotation  go to state 99


State 54

  106 Primary: NUM .

    $default  reduce using rule 106 (Primary)


State 55

   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'
  109 Primary: ID .
  116        | ID . PP
  118        | ID . MM
  141 FunctionCall: ID . OPEN_PAR ParamList CLOSE_PAR

    OPEN_PAR  shift, and go to state 100
    PP        shift, and go to state 101
    MM        shift, and go to state 102
    '['       shift, and go to state 41

    $default  reduce using rule 109 (Primary)


State 56

  107 Primary: FLOATNUM .

    $default  reduce using rule 107 (Primary)


State 57

  108 Primary: CHARCONST .

    $default  reduce using rule 108 (Primary)


State 58

  105 Primary: OPEN_PAR . Expr CLOSE_PAR

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 103
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 59

   91 Logical_Expr: NOT . Relational_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 104
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 60

  115 Primary: PP . ID

    ID  shift, and go to state 105


State 61

  117 Primary: MM . ID

    ID  shift, and go to state 106


State 62

  112 Primary: '-' . Primary

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 107
    FunctionCall   go to state 72


State 63

  110 Primary: '*' . ID

    ID  shift, and go to state 108


State 64

  111 Primary: '&' . ID

    ID  shift, and go to state 109


State 65

  113 Primary: ArrayNotation .

    $default  reduce using rule 113 (Primary)


State 66

   43 DefineAssign: ID '=' Expr .

    $default  reduce using rule 43 (DefineAssign)


State 67

   87 Expr: Logical_Expr .
   89 Logical_Expr: Logical_Expr . AND Relational_Expr
   90             | Logical_Expr . OR Relational_Expr

    AND  shift, and go to state 110
    OR   shift, and go to state 111

    $default  reduce using rule 87 (Expr)


State 68

   88 Logical_Expr: Relational_Expr .
   93 Relational_Expr: Relational_Expr . GT Additive_Expr
   94                | Relational_Expr . LT Additive_Expr
   95                | Relational_Expr . GE Additive_Expr
   96                | Relational_Expr . LE Additive_Expr
   97                | Relational_Expr . EQ Additive_Expr
   98                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 88 (Logical_Expr)


State 69

   92 Relational_Expr: Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 92 (Relational_Expr)


State 70

   99 Additive_Expr: Multiplicative_Expr .
  103 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
  104                    | Multiplicative_Expr . '/' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 99 (Additive_Expr)


State 71

  102 Multiplicative_Expr: Primary .

    $default  reduce using rule 102 (Multiplicative_Expr)


State 72

  114 Primary: FunctionCall .

    $default  reduce using rule 114 (Primary)


State 73

   44 DefineAssign: ID PAS Expr .

    $default  reduce using rule 44 (DefineAssign)


State 74

   46 DefineAssign: ID MAS Expr .

    $default  reduce using rule 46 (DefineAssign)


State 75

   47 DefineAssign: ID DAS Expr .

    $default  reduce using rule 47 (DefineAssign)


State 76

   45 DefineAssign: ID SAS Expr .

    $default  reduce using rule 45 (DefineAssign)


State 77

   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'
   36 IDList: ID . ',' IDList
   39       | ID .
   43 DefineAssign: ID . '=' Expr
   44             | ID . PAS Expr
   45             | ID . SAS Expr
   46             | ID . MAS Expr
   47             | ID . DAS Expr

    '='  shift, and go to state 35
    PAS  shift, and go to state 36
    MAS  shift, and go to state 37
    DAS  shift, and go to state 38
    SAS  shift, and go to state 39
    ','  shift, and go to state 40
    '['  shift, and go to state 41

    $default  reduce using rule 39 (IDList)


State 78

   36 IDList: ID ',' IDList .

    $default  reduce using rule 36 (IDList)


State 79

   33 ArrayNotation: ID '[' ']' .

    $default  reduce using rule 33 (ArrayNotation)


State 80

   34 ArrayNotation: ID '[' Expr . ']'

    ']'  shift, and go to state 122


State 81

   48 DefineAssign: '*' ID '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 123
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 82

   49 DefineAssign: '*' ID PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 124
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 83

   51 DefineAssign: '*' ID MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 125
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 84

   52 DefineAssign: '*' ID DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 126
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 85

   50 DefineAssign: '*' ID SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 127
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 86

   37 IDList: '*' ID ',' . IDList

    ID   shift, and go to state 77
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 128
    DefineAssign   go to state 28


State 87

   53 DefineAssign: ArrayNotation '=' Expr .

    $default  reduce using rule 53 (DefineAssign)


State 88

   54 DefineAssign: ArrayNotation PAS Expr .

    $default  reduce using rule 54 (DefineAssign)


State 89

   56 DefineAssign: ArrayNotation MAS Expr .

    $default  reduce using rule 56 (DefineAssign)


State 90

   57 DefineAssign: ArrayNotation DAS Expr .

    $default  reduce using rule 57 (DefineAssign)


State 91

   55 DefineAssign: ArrayNotation SAS Expr .

    $default  reduce using rule 55 (DefineAssign)


State 92

   38 IDList: ArrayNotation ',' IDList .

    $default  reduce using rule 38 (IDList)


State 93

   41 IDList: DefineAssign ',' IDList .

    $default  reduce using rule 41 (IDList)


State 94

    7 IncludeStatement: '#' INCLUDE LT ID GT .

    $default  reduce using rule 7 (IncludeStatement)


State 95

    8 IncludeStatement: '#' INCLUDE LT ID '.' . ID GT

    ID  shift, and go to state 129


State 96

   11 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR . CompoundStatement

    '{'  shift, and go to state 130

    CompoundStatement  go to state 131


State 97

   12 FormalParamList: Type ID .
   15                | Type ID . ',' FormalParamList
   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'

    ','  shift, and go to state 132
    '['  shift, and go to state 41

    $default  reduce using rule 12 (FormalParamList)


State 98

   13 FormalParamList: Type '*' . ID
   16                | Type '*' . ID ',' FormalParamList

    ID  shift, and go to state 133


State 99

   14 FormalParamList: Type ArrayNotation .
   17                | Type ArrayNotation . ',' FormalParamList

    ','  shift, and go to state 134

    $default  reduce using rule 14 (FormalParamList)


State 100

  141 FunctionCall: ID OPEN_PAR . ParamList CLOSE_PAR

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 141
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 101

  116 Primary: ID PP .

    $default  reduce using rule 116 (Primary)


State 102

  118 Primary: ID MM .

    $default  reduce using rule 118 (Primary)


State 103

  105 Primary: OPEN_PAR Expr . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 143


State 104

   91 Logical_Expr: NOT Relational_Expr .
   93 Relational_Expr: Relational_Expr . GT Additive_Expr
   94                | Relational_Expr . LT Additive_Expr
   95                | Relational_Expr . GE Additive_Expr
   96                | Relational_Expr . LE Additive_Expr
   97                | Relational_Expr . EQ Additive_Expr
   98                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 91 (Logical_Expr)


State 105

  115 Primary: PP ID .

    $default  reduce using rule 115 (Primary)


State 106

  117 Primary: MM ID .

    $default  reduce using rule 117 (Primary)


State 107

  112 Primary: '-' Primary .

    $default  reduce using rule 112 (Primary)


State 108

  110 Primary: '*' ID .

    $default  reduce using rule 110 (Primary)


State 109

  111 Primary: '&' ID .

    $default  reduce using rule 111 (Primary)


State 110

   89 Logical_Expr: Logical_Expr AND . Relational_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 144
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 111

   90 Logical_Expr: Logical_Expr OR . Relational_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Relational_Expr      go to state 145
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 112

   96 Relational_Expr: Relational_Expr LE . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 146
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 113

   95 Relational_Expr: Relational_Expr GE . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 147
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 114

   97 Relational_Expr: Relational_Expr EQ . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 148
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 115

   98 Relational_Expr: Relational_Expr NE . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 149
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 116

   94 Relational_Expr: Relational_Expr LT . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 150
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 117

   93 Relational_Expr: Relational_Expr GT . Additive_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Additive_Expr        go to state 151
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 118

  100 Additive_Expr: Additive_Expr '+' . Multiplicative_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Multiplicative_Expr  go to state 152
    Primary              go to state 71
    FunctionCall         go to state 72


State 119

  101 Additive_Expr: Additive_Expr '-' . Multiplicative_Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Multiplicative_Expr  go to state 153
    Primary              go to state 71
    FunctionCall         go to state 72


State 120

  103 Multiplicative_Expr: Multiplicative_Expr '*' . Primary

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 154
    FunctionCall   go to state 72


State 121

  104 Multiplicative_Expr: Multiplicative_Expr '/' . Primary

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation  go to state 65
    Primary        go to state 155
    FunctionCall   go to state 72


State 122

   34 ArrayNotation: ID '[' Expr ']' .

    $default  reduce using rule 34 (ArrayNotation)


State 123

   48 DefineAssign: '*' ID '=' Expr .

    $default  reduce using rule 48 (DefineAssign)


State 124

   49 DefineAssign: '*' ID PAS Expr .

    $default  reduce using rule 49 (DefineAssign)


State 125

   51 DefineAssign: '*' ID MAS Expr .

    $default  reduce using rule 51 (DefineAssign)


State 126

   52 DefineAssign: '*' ID DAS Expr .

    $default  reduce using rule 52 (DefineAssign)


State 127

   50 DefineAssign: '*' ID SAS Expr .

    $default  reduce using rule 50 (DefineAssign)


State 128

   37 IDList: '*' ID ',' IDList .

    $default  reduce using rule 37 (IDList)


State 129

    8 IncludeStatement: '#' INCLUDE LT ID '.' ID . GT

    GT  shift, and go to state 156


State 130

  119 CompoundStatement: '{' . StatementList '}'

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163

    $default  reduce using rule 121 (StatementList)

    Declaration      go to state 164
    Type             go to state 165
    Modifiers        go to state 17
    ArrayNotation    go to state 166
    Assignment       go to state 167
    Primary          go to state 168
    StatementList    go to state 169
    Statement        go to state 170
    ReturnStatement  go to state 171
    WhileStatement   go to state 172
    ForStatement     go to state 173
    IfStatement      go to state 174
    FunctionCall     go to state 175


State 131

   11 FunctionDef: Type ID OPEN_PAR FormalParamList CLOSE_PAR CompoundStatement .

    $default  reduce using rule 11 (FunctionDef)


State 132

   15 FormalParamList: Type ID ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 18 (FormalParamList)

    FormalParamList  go to state 176
    Type             go to state 53
    Modifiers        go to state 17


State 133

   13 FormalParamList: Type '*' ID .
   16                | Type '*' ID . ',' FormalParamList

    ','  shift, and go to state 177

    $default  reduce using rule 13 (FormalParamList)


State 134

   17 FormalParamList: Type ArrayNotation ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 18 (FormalParamList)

    FormalParamList  go to state 178
    Type             go to state 53
    Modifiers        go to state 17


State 135

   64 ParamList: NUM . ',' ParamList
   66          | NUM .
  106 Primary: NUM .

    ','  shift, and go to state 179

    CLOSE_PAR  reduce using rule 66 (ParamList)
    CLOSE_PAR  [reduce using rule 106 (Primary)]
    ','        [reduce using rule 106 (Primary)]
    $default   reduce using rule 106 (Primary)


State 136

   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'
   59 ParamList: ID . ',' ParamList
   65          | ID .
  109 Primary: ID .
  116        | ID . PP
  118        | ID . MM
  141 FunctionCall: ID . OPEN_PAR ParamList CLOSE_PAR

    OPEN_PAR  shift, and go to state 100
    PP        shift, and go to state 101
    MM        shift, and go to state 102
    ','       shift, and go to state 180
    '['       shift, and go to state 41

    CLOSE_PAR  reduce using rule 65 (ParamList)
    CLOSE_PAR  [reduce using rule 109 (Primary)]
    ','        [reduce using rule 109 (Primary)]
    $default   reduce using rule 109 (Primary)


State 137

   63 ParamList: STRING . ',' ParamList
   67          | STRING .

    ','  shift, and go to state 181

    $default  reduce using rule 67 (ParamList)


State 138

   60 ParamList: '*' . ID ',' ParamList
   68          | '*' . ID
  110 Primary: '*' . ID

    ID  shift, and go to state 182


State 139

   61 ParamList: '&' . ID ',' ParamList
  111 Primary: '&' . ID

    ID  shift, and go to state 183


State 140

   58 ParamList: ArrayNotation .
   62          | ArrayNotation . ',' ParamList
  113 Primary: ArrayNotation .

    ','  shift, and go to state 184

    CLOSE_PAR  reduce using rule 58 (ParamList)
    CLOSE_PAR  [reduce using rule 113 (Primary)]
    ','        [reduce using rule 113 (Primary)]
    $default   reduce using rule 113 (Primary)


State 141

  141 FunctionCall: ID OPEN_PAR ParamList . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 185


State 142

   69 ParamList: Expr .
   70          | Expr . ',' ParamList

    ','  shift, and go to state 186

    $default  reduce using rule 69 (ParamList)


State 143

  105 Primary: OPEN_PAR Expr CLOSE_PAR .

    $default  reduce using rule 105 (Primary)


State 144

   89 Logical_Expr: Logical_Expr AND Relational_Expr .
   93 Relational_Expr: Relational_Expr . GT Additive_Expr
   94                | Relational_Expr . LT Additive_Expr
   95                | Relational_Expr . GE Additive_Expr
   96                | Relational_Expr . LE Additive_Expr
   97                | Relational_Expr . EQ Additive_Expr
   98                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 89 (Logical_Expr)


State 145

   90 Logical_Expr: Logical_Expr OR Relational_Expr .
   93 Relational_Expr: Relational_Expr . GT Additive_Expr
   94                | Relational_Expr . LT Additive_Expr
   95                | Relational_Expr . GE Additive_Expr
   96                | Relational_Expr . LE Additive_Expr
   97                | Relational_Expr . EQ Additive_Expr
   98                | Relational_Expr . NE Additive_Expr

    LE  shift, and go to state 112
    GE  shift, and go to state 113
    EQ  shift, and go to state 114
    NE  shift, and go to state 115
    LT  shift, and go to state 116
    GT  shift, and go to state 117

    $default  reduce using rule 90 (Logical_Expr)


State 146

   96 Relational_Expr: Relational_Expr LE Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 96 (Relational_Expr)


State 147

   95 Relational_Expr: Relational_Expr GE Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 95 (Relational_Expr)


State 148

   97 Relational_Expr: Relational_Expr EQ Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 97 (Relational_Expr)


State 149

   98 Relational_Expr: Relational_Expr NE Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 98 (Relational_Expr)


State 150

   94 Relational_Expr: Relational_Expr LT Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 94 (Relational_Expr)


State 151

   93 Relational_Expr: Relational_Expr GT Additive_Expr .
  100 Additive_Expr: Additive_Expr . '+' Multiplicative_Expr
  101              | Additive_Expr . '-' Multiplicative_Expr

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 93 (Relational_Expr)


State 152

  100 Additive_Expr: Additive_Expr '+' Multiplicative_Expr .
  103 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
  104                    | Multiplicative_Expr . '/' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 100 (Additive_Expr)


State 153

  101 Additive_Expr: Additive_Expr '-' Multiplicative_Expr .
  103 Multiplicative_Expr: Multiplicative_Expr . '*' Primary
  104                    | Multiplicative_Expr . '/' Primary

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 101 (Additive_Expr)


State 154

  103 Multiplicative_Expr: Multiplicative_Expr '*' Primary .

    $default  reduce using rule 103 (Multiplicative_Expr)


State 155

  104 Multiplicative_Expr: Multiplicative_Expr '/' Primary .

    $default  reduce using rule 104 (Multiplicative_Expr)


State 156

    8 IncludeStatement: '#' INCLUDE LT ID '.' ID GT .

    $default  reduce using rule 8 (IncludeStatement)


State 157

  130 ReturnStatement: RETURN . Expr ';'
  131                | RETURN . FunctionCall ';'

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 187
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 188


State 158

  134 ForStatement: FOR . OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  135             | FOR . OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    OPEN_PAR  shift, and go to state 189


State 159

  132 WhileStatement: WHILE . OPEN_PAR Expr CLOSE_PAR Statement
  133               | WHILE . OPEN_PAR Expr CLOSE_PAR CompoundStatement

    OPEN_PAR  shift, and go to state 190


State 160

  136 IfStatement: IF . OPEN_PAR Expr CLOSE_PAR Statement ElseStatement
  137            | IF . OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement

    OPEN_PAR  shift, and go to state 191


State 161

   33 ArrayNotation: ID . '[' ']'
   34              | ID . '[' Expr ']'
   71 Assignment: ID . '=' Expr
   72           | ID . PAS Expr
   73           | ID . SAS Expr
   74           | ID . MAS Expr
   75           | ID . DAS Expr
  109 Primary: ID .
  116        | ID . PP
  118        | ID . MM
  141 FunctionCall: ID . OPEN_PAR ParamList CLOSE_PAR

    OPEN_PAR  shift, and go to state 100
    '='       shift, and go to state 192
    PAS       shift, and go to state 193
    MAS       shift, and go to state 194
    DAS       shift, and go to state 195
    SAS       shift, and go to state 196
    PP        shift, and go to state 101
    MM        shift, and go to state 102
    '['       shift, and go to state 41

    $default  reduce using rule 109 (Primary)


State 162

   76 Assignment: '*' . ID '=' Expr
   77           | '*' . ID PAS Expr
   78           | '*' . ID SAS Expr
   79           | '*' . ID MAS Expr
   80           | '*' . ID DAS Expr
  110 Primary: '*' . ID

    ID  shift, and go to state 197


State 163

  129 Statement: ';' .

    $default  reduce using rule 129 (Statement)


State 164

  123 Statement: Declaration .

    $default  reduce using rule 123 (Statement)


State 165

   19 Declaration: Type . IDList ';'

    ID   shift, and go to state 77
    '*'  shift, and go to state 25

    ArrayNotation  go to state 26
    IDList         go to state 27
    DefineAssign   go to state 28


State 166

   81 Assignment: ArrayNotation . '=' Expr
   82           | ArrayNotation . PAS Expr
   83           | ArrayNotation . SAS Expr
   84           | ArrayNotation . MAS Expr
   85           | ArrayNotation . DAS Expr
  113 Primary: ArrayNotation .

    '='  shift, and go to state 198
    PAS  shift, and go to state 199
    MAS  shift, and go to state 200
    DAS  shift, and go to state 201
    SAS  shift, and go to state 202

    $default  reduce using rule 113 (Primary)


State 167

  127 Statement: Assignment . ';'

    ';'  shift, and go to state 203


State 168

   86 Assignment: Primary .

    $default  reduce using rule 86 (Assignment)


State 169

  119 CompoundStatement: '{' StatementList . '}'

    '}'  shift, and go to state 204


State 170

  120 StatementList: Statement . StatementList

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163

    $default  reduce using rule 121 (StatementList)

    Declaration      go to state 164
    Type             go to state 165
    Modifiers        go to state 17
    ArrayNotation    go to state 166
    Assignment       go to state 167
    Primary          go to state 168
    StatementList    go to state 205
    Statement        go to state 170
    ReturnStatement  go to state 171
    WhileStatement   go to state 172
    ForStatement     go to state 173
    IfStatement      go to state 174
    FunctionCall     go to state 175


State 171

  128 Statement: ReturnStatement .

    $default  reduce using rule 128 (Statement)


State 172

  122 Statement: WhileStatement .

    $default  reduce using rule 122 (Statement)


State 173

  124 Statement: ForStatement .

    $default  reduce using rule 124 (Statement)


State 174

  125 Statement: IfStatement .

    $default  reduce using rule 125 (Statement)


State 175

  114 Primary: FunctionCall .
  126 Statement: FunctionCall . ';'

    ';'  shift, and go to state 206

    ';'  [reduce using rule 114 (Primary)]


State 176

   15 FormalParamList: Type ID ',' FormalParamList .

    $default  reduce using rule 15 (FormalParamList)


State 177

   16 FormalParamList: Type '*' ID ',' . FormalParamList

    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    VOID      shift, and go to state 5
    SIGNED    shift, and go to state 6
    UNSIGNED  shift, and go to state 7
    LONG      shift, and go to state 8
    SHORT     shift, and go to state 9

    $default  reduce using rule 18 (FormalParamList)

    FormalParamList  go to state 207
    Type             go to state 53
    Modifiers        go to state 17


State 178

   17 FormalParamList: Type ArrayNotation ',' FormalParamList .

    $default  reduce using rule 17 (FormalParamList)


State 179

   64 ParamList: NUM ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 208
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 180

   59 ParamList: ID ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 209
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 181

   63 ParamList: STRING ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 210
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 182

   60 ParamList: '*' ID . ',' ParamList
   68          | '*' ID .
  110 Primary: '*' ID .

    ','  shift, and go to state 211

    CLOSE_PAR  reduce using rule 68 (ParamList)
    CLOSE_PAR  [reduce using rule 110 (Primary)]
    ','        [reduce using rule 110 (Primary)]
    $default   reduce using rule 110 (Primary)


State 183

   61 ParamList: '&' ID . ',' ParamList
  111 Primary: '&' ID .

    ','  shift, and go to state 212

    ','       [reduce using rule 111 (Primary)]
    $default  reduce using rule 111 (Primary)


State 184

   62 ParamList: ArrayNotation ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 213
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 185

  141 FunctionCall: ID OPEN_PAR ParamList CLOSE_PAR .

    $default  reduce using rule 141 (FunctionCall)


State 186

   70 ParamList: Expr ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 214
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 187

  130 ReturnStatement: RETURN Expr . ';'

    ';'  shift, and go to state 215


State 188

  114 Primary: FunctionCall .
  131 ReturnStatement: RETURN FunctionCall . ';'

    ';'  shift, and go to state 216

    ';'       [reduce using rule 114 (Primary)]
    $default  reduce using rule 114 (Primary)


State 189

  134 ForStatement: FOR OPEN_PAR . Assignment ';' Expr ';' Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR . Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64

    ArrayNotation  go to state 166
    Assignment     go to state 217
    Primary        go to state 168
    FunctionCall   go to state 72


State 190

  132 WhileStatement: WHILE OPEN_PAR . Expr CLOSE_PAR Statement
  133               | WHILE OPEN_PAR . Expr CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 218
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 191

  136 IfStatement: IF OPEN_PAR . Expr CLOSE_PAR Statement ElseStatement
  137            | IF OPEN_PAR . Expr CLOSE_PAR CompoundStatement ElseStatement

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 219
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 192

   71 Assignment: ID '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 220
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 193

   72 Assignment: ID PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 221
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 194

   74 Assignment: ID MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 222
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 195

   75 Assignment: ID DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 223
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 196

   73 Assignment: ID SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 224
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 197

   76 Assignment: '*' ID . '=' Expr
   77           | '*' ID . PAS Expr
   78           | '*' ID . SAS Expr
   79           | '*' ID . MAS Expr
   80           | '*' ID . DAS Expr
  110 Primary: '*' ID .

    '='  shift, and go to state 225
    PAS  shift, and go to state 226
    MAS  shift, and go to state 227
    DAS  shift, and go to state 228
    SAS  shift, and go to state 229

    $default  reduce using rule 110 (Primary)


State 198

   81 Assignment: ArrayNotation '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 230
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 199

   82 Assignment: ArrayNotation PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 231
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 200

   84 Assignment: ArrayNotation MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 232
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 201

   85 Assignment: ArrayNotation DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 233
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 202

   83 Assignment: ArrayNotation SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 234
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 203

  127 Statement: Assignment ';' .

    $default  reduce using rule 127 (Statement)


State 204

  119 CompoundStatement: '{' StatementList '}' .

    $default  reduce using rule 119 (CompoundStatement)


State 205

  120 StatementList: Statement StatementList .

    $default  reduce using rule 120 (StatementList)


State 206

  126 Statement: FunctionCall ';' .

    $default  reduce using rule 126 (Statement)


State 207

   16 FormalParamList: Type '*' ID ',' FormalParamList .

    $default  reduce using rule 16 (FormalParamList)


State 208

   64 ParamList: NUM ',' ParamList .

    $default  reduce using rule 64 (ParamList)


State 209

   59 ParamList: ID ',' ParamList .

    $default  reduce using rule 59 (ParamList)


State 210

   63 ParamList: STRING ',' ParamList .

    $default  reduce using rule 63 (ParamList)


State 211

   60 ParamList: '*' ID ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 235
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 212

   61 ParamList: '&' ID ',' . ParamList

    NUM        shift, and go to state 135
    ID         shift, and go to state 136
    FLOATNUM   shift, and go to state 56
    STRING     shift, and go to state 137
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 138
    '&'        shift, and go to state 139

    ArrayNotation        go to state 140
    ParamList            go to state 236
    Expr                 go to state 142
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 213

   62 ParamList: ArrayNotation ',' ParamList .

    $default  reduce using rule 62 (ParamList)


State 214

   70 ParamList: Expr ',' ParamList .

    $default  reduce using rule 70 (ParamList)


State 215

  130 ReturnStatement: RETURN Expr ';' .

    $default  reduce using rule 130 (ReturnStatement)


State 216

  131 ReturnStatement: RETURN FunctionCall ';' .

    $default  reduce using rule 131 (ReturnStatement)


State 217

  134 ForStatement: FOR OPEN_PAR Assignment . ';' Expr ';' Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment . ';' Expr ';' Assignment CLOSE_PAR CompoundStatement

    ';'  shift, and go to state 237


State 218

  132 WhileStatement: WHILE OPEN_PAR Expr . CLOSE_PAR Statement
  133               | WHILE OPEN_PAR Expr . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 238


State 219

  136 IfStatement: IF OPEN_PAR Expr . CLOSE_PAR Statement ElseStatement
  137            | IF OPEN_PAR Expr . CLOSE_PAR CompoundStatement ElseStatement

    CLOSE_PAR  shift, and go to state 239


State 220

   71 Assignment: ID '=' Expr .

    $default  reduce using rule 71 (Assignment)


State 221

   72 Assignment: ID PAS Expr .

    $default  reduce using rule 72 (Assignment)


State 222

   74 Assignment: ID MAS Expr .

    $default  reduce using rule 74 (Assignment)


State 223

   75 Assignment: ID DAS Expr .

    $default  reduce using rule 75 (Assignment)


State 224

   73 Assignment: ID SAS Expr .

    $default  reduce using rule 73 (Assignment)


State 225

   76 Assignment: '*' ID '=' . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 240
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 226

   77 Assignment: '*' ID PAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 241
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 227

   79 Assignment: '*' ID MAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 242
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 228

   80 Assignment: '*' ID DAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 243
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 229

   78 Assignment: '*' ID SAS . Expr

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 244
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 230

   81 Assignment: ArrayNotation '=' Expr .

    $default  reduce using rule 81 (Assignment)


State 231

   82 Assignment: ArrayNotation PAS Expr .

    $default  reduce using rule 82 (Assignment)


State 232

   84 Assignment: ArrayNotation MAS Expr .

    $default  reduce using rule 84 (Assignment)


State 233

   85 Assignment: ArrayNotation DAS Expr .

    $default  reduce using rule 85 (Assignment)


State 234

   83 Assignment: ArrayNotation SAS Expr .

    $default  reduce using rule 83 (Assignment)


State 235

   60 ParamList: '*' ID ',' ParamList .

    $default  reduce using rule 60 (ParamList)


State 236

   61 ParamList: '&' ID ',' ParamList .

    $default  reduce using rule 61 (ParamList)


State 237

  134 ForStatement: FOR OPEN_PAR Assignment ';' . Expr ';' Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment ';' . Expr ';' Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 54
    ID         shift, and go to state 55
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    NOT        shift, and go to state 59
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 63
    '&'        shift, and go to state 64

    ArrayNotation        go to state 65
    Expr                 go to state 245
    Logical_Expr         go to state 67
    Relational_Expr      go to state 68
    Additive_Expr        go to state 69
    Multiplicative_Expr  go to state 70
    Primary              go to state 71
    FunctionCall         go to state 72


State 238

  132 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR . Statement
  133               | WHILE OPEN_PAR Expr CLOSE_PAR . CompoundStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163
    '{'        shift, and go to state 130

    Declaration        go to state 164
    Type               go to state 165
    Modifiers          go to state 17
    ArrayNotation      go to state 166
    Assignment         go to state 167
    Primary            go to state 168
    CompoundStatement  go to state 246
    Statement          go to state 247
    ReturnStatement    go to state 171
    WhileStatement     go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 175


State 239

  136 IfStatement: IF OPEN_PAR Expr CLOSE_PAR . Statement ElseStatement
  137            | IF OPEN_PAR Expr CLOSE_PAR . CompoundStatement ElseStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163
    '{'        shift, and go to state 130

    Declaration        go to state 164
    Type               go to state 165
    Modifiers          go to state 17
    ArrayNotation      go to state 166
    Assignment         go to state 167
    Primary            go to state 168
    CompoundStatement  go to state 248
    Statement          go to state 249
    ReturnStatement    go to state 171
    WhileStatement     go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 175


State 240

   76 Assignment: '*' ID '=' Expr .

    $default  reduce using rule 76 (Assignment)


State 241

   77 Assignment: '*' ID PAS Expr .

    $default  reduce using rule 77 (Assignment)


State 242

   79 Assignment: '*' ID MAS Expr .

    $default  reduce using rule 79 (Assignment)


State 243

   80 Assignment: '*' ID DAS Expr .

    $default  reduce using rule 80 (Assignment)


State 244

   78 Assignment: '*' ID SAS Expr .

    $default  reduce using rule 78 (Assignment)


State 245

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr . ';' Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment ';' Expr . ';' Assignment CLOSE_PAR CompoundStatement

    ';'  shift, and go to state 250


State 246

  133 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR CompoundStatement .

    $default  reduce using rule 133 (WhileStatement)


State 247

  132 WhileStatement: WHILE OPEN_PAR Expr CLOSE_PAR Statement .

    $default  reduce using rule 132 (WhileStatement)


State 248

  137 IfStatement: IF OPEN_PAR Expr CLOSE_PAR CompoundStatement . ElseStatement

    ELSE  shift, and go to state 251

    ELSE      [reduce using rule 140 (ElseStatement)]
    $default  reduce using rule 140 (ElseStatement)

    ElseStatement  go to state 252


State 249

  136 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement . ElseStatement

    ELSE  shift, and go to state 251

    ELSE      [reduce using rule 140 (ElseStatement)]
    $default  reduce using rule 140 (ElseStatement)

    ElseStatement  go to state 253


State 250

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' . Assignment CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment ';' Expr ';' . Assignment CLOSE_PAR CompoundStatement

    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64

    ArrayNotation  go to state 166
    Assignment     go to state 254
    Primary        go to state 168
    FunctionCall   go to state 72


State 251

  138 ElseStatement: ELSE . CompoundStatement
  139              | ELSE . Statement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163
    '{'        shift, and go to state 130

    Declaration        go to state 164
    Type               go to state 165
    Modifiers          go to state 17
    ArrayNotation      go to state 166
    Assignment         go to state 167
    Primary            go to state 168
    CompoundStatement  go to state 255
    Statement          go to state 256
    ReturnStatement    go to state 171
    WhileStatement     go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 175


State 252

  137 IfStatement: IF OPEN_PAR Expr CLOSE_PAR CompoundStatement ElseStatement .

    $default  reduce using rule 137 (IfStatement)


State 253

  136 IfStatement: IF OPEN_PAR Expr CLOSE_PAR Statement ElseStatement .

    $default  reduce using rule 136 (IfStatement)


State 254

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment . CLOSE_PAR Statement
  135             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment . CLOSE_PAR CompoundStatement

    CLOSE_PAR  shift, and go to state 257


State 255

  138 ElseStatement: ELSE CompoundStatement .

    $default  reduce using rule 138 (ElseStatement)


State 256

  139 ElseStatement: ELSE Statement .

    $default  reduce using rule 139 (ElseStatement)


State 257

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR . Statement
  135             | FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR . CompoundStatement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    CHAR       shift, and go to state 3
    DOUBLE     shift, and go to state 4
    VOID       shift, and go to state 5
    RETURN     shift, and go to state 157
    SIGNED     shift, and go to state 6
    UNSIGNED   shift, and go to state 7
    LONG       shift, and go to state 8
    SHORT      shift, and go to state 9
    FOR        shift, and go to state 158
    WHILE      shift, and go to state 159
    IF         shift, and go to state 160
    NUM        shift, and go to state 54
    ID         shift, and go to state 161
    FLOATNUM   shift, and go to state 56
    CHARCONST  shift, and go to state 57
    OPEN_PAR   shift, and go to state 58
    PP         shift, and go to state 60
    MM         shift, and go to state 61
    '-'        shift, and go to state 62
    '*'        shift, and go to state 162
    '&'        shift, and go to state 64
    ';'        shift, and go to state 163
    '{'        shift, and go to state 130

    Declaration        go to state 164
    Type               go to state 165
    Modifiers          go to state 17
    ArrayNotation      go to state 166
    Assignment         go to state 167
    Primary            go to state 168
    CompoundStatement  go to state 258
    Statement          go to state 259
    ReturnStatement    go to state 171
    WhileStatement     go to state 172
    ForStatement       go to state 173
    IfStatement        go to state 174
    FunctionCall       go to state 175


State 258

  135 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR CompoundStatement .

    $default  reduce using rule 135 (ForStatement)


State 259

  134 ForStatement: FOR OPEN_PAR Assignment ';' Expr ';' Assignment CLOSE_PAR Statement .

    $default  reduce using rule 134 (ForStatement)
